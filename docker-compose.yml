version: '3.8'

services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq_nestjs
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - nestjs_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: mongodb_nestjs
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - nestjs_network

  # IAM Service
  iam:
    build:
      context: .
      dockerfile: apps/iam/Dockerfile
    container_name: iam_service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/iam_db?authSource=admin
      - JWT_SECRET=iam-super-secret-key
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672
      - USE_RABBITMQ=true
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - nestjs_network

  # BPM Service
  bpm:
    build:
      context: .
      dockerfile: apps/bpm/Dockerfile
    container_name: bpm_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/bpm_db?authSource=admin
      - JWT_SECRET=bpm-super-secret-key
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672
      - USE_RABBITMQ=true
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - nestjs_network

  # LGM Service
  lgm:
    build:
      context: .
      dockerfile: apps/lgm/Dockerfile
    container_name: lgm_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/lgm_db?authSource=admin
      - JWT_SECRET=lgm-super-secret-key
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672
      - USE_RABBITMQ=true
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - nestjs_network

  # NSM Service
  nsm:
    build:
      context: .
      dockerfile: apps/nsm/Dockerfile
    container_name: nsm_service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/nsm_db?authSource=admin
      - JWT_SECRET=nsm-super-secret-key
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672
      - USE_RABBITMQ=true
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - nestjs_network

volumes:
  rabbitmq_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  nestjs_network:
    driver: bridge
